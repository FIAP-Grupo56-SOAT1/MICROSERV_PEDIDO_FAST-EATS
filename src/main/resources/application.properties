## Environment config ##
spring.config.import=optional:file:.env[.properties]
server.port=${APP_PORT:8080}

## Swagger Config ##
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

## Spring Datasource Config ##
spring.datasource.url=jdbc:mysql://${DB_SERVER}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Show details of health endpoint
management.endpoint.health.show-details=always

## Spring Flyway Config ##
spring.flyway.url=jdbc:mysql://${DB_SERVER}:${DB_PORT}/${DB_NAME}
spring.flyway.user=${DB_USER}
spring.flyway.password=${DB_PASSWORD}
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

## AWS Config ##
#spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
#spring.cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
#spring.cloud.aws.region.static=${AWS_REGION}
spring.cloud.aws.sqs.endpoint=${AWS_SQS_ENDPOINT}
spring.cloud.aws.sqs.enabled=true

## Filas Mensageria ##
sqs.queue.pedido.criado=${AWS_SQS_QUEUE_PEDIDO_CRIADO}
sqs.queue.pedido.aguardando-pagamento=${AWS_SQS_QUEUE_PEDIDO_AGUARDANDO_PAGAMENTO}
sqs.queue.pedido.pago=${AWS_SQS_QUEUE_PEDIDO_PAGO}
sqs.queue.pedido.recebido=${AWS_SQS_QUEUE_PEDIDO_RECEBIDO}
sqs.queue.pedido.em-preparo=${AWS_SQS_QUEUE_PEDIDO_EM_PREPARO}
sqs.queue.pedido.pronto=${AWS_SQS_QUEUE_PEDIDO_PRONTO}
sqs.queue.pedido.finalizado=${AWS_SQS_QUEUE_PEDIDO_FINALIZADO}
sqs.queue.pedido.cancelado=${AWS_SQS_QUEUE_PEDIDO_CANCELADO}
sqs.queue.cozinha.erro.pedido.recebido=${AWS_SQS_QUEUE_COZINHA_ERRO_PEDIDO_RECEBIDO}
sqs.queue.cozinha.erro.pedido.em-preparo=${AWS_SQS_QUEUE_COZINHA_ERRO_PEDIDO_EM_PREPARO}
sqs.queue.cozinha.erro.pedido.pronto=${AWS_SQS_QUEUE_COZINHA_ERRO_PEDIDO_PRONTO}
sqs.queue.cozinha.erro.pedido.finalizado=${AWS_SQS_QUEUE_COZINHA_ERRO_PEDIDO_FINALIZADO}
sqs.queue.pagamento.erro.pedido.cancelar=${AWS_SQS_QUEUE_PAGAMENTO_ERRO_PEDIDO_CANCELAR}
sqs.queue.pagamento.receber-pedido-pago=${AWS_SQS_QUEUE_PAGAMENTO_RECEBER_PEDIDO_PAGO}
sqs.queue.pagamento.gerar.pagamento=${AWS_SQS_QUEUE_PAGAMENTO_GERAR_PAGAMENTO}
sqs.queue.pagamento.erro.pagamento-pedido=${AWS_SQS_QUEUE_PAGAMENTO_ERRO_PAGAMENTO_PEDIDO}